@inject ICategoryService CategoryService;
@inject ILocalStorageService LocalStorage;
@inject AuthenticationStateProvider AuthStateProvider;

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Book Shop</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div> 
        <div class="dropdown-divider"/>
        @foreach (var category in CategoryService?.Categories != null ? CategoryService.Categories : new List<Category>())
        {            
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="@category?.Url">
                    <span class="oi oi-@category?.Icon" aria-hidden="true"></span> @category?.Name
                </NavLink>
            </div>
        }
        <div class="dropdown-divider" />
        <AuthorizeView>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="login">
                        <span class="oi oi-account-login" aria-hidden="true"></span> Вход
                    </NavLink>
                </div>
            </NotAuthorized>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" @onclick="LogoutAsync" style="cursor: pointer;">
                        <span class="oi oi-account-logout" aria-hidden="true"></span> Выход
                    </NavLink>
                </div>
            </Authorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }    

    protected override async Task OnInitializedAsync()
    {
        await CategoryService.LoadCategoriesAsync();
    }

    private async Task LogoutAsync()
    {
        await LocalStorage.RemoveItemAsync("username");
        await AuthStateProvider.GetAuthenticationStateAsync();
    }
}