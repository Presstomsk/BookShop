@page "/"
@page "/{*categoryurl}"
@inject ICategoryService CategoryService;
@inject IProductService ProductService;
@inject ISyncLocalStorageService LocaleStorage;
@inject IStatsService StatsService;

@if (category != null)
{
    <h1>Welcome to the @category.Name section!</h1>
    <ProductList/>
}
else
{
    <AuthorizeView>
        <NotAuthorized>
            <h1>Добро пожаловать в магазин книг!</h1>
        </NotAuthorized>
        <Authorized>
            <h1>@_authText</h1>
        </Authorized>
    </AuthorizeView>    
    <ProductList/>
}

@code{
    private Category? category = null;
    private string? _authText;

    [Parameter]
    public string? CategoryUrl { get; set; }
    [CascadingParameter]
    private Task<AuthenticationState>? AuthenticationState { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        await ProductService.LoadProductsAsync(CategoryUrl);

        category = CategoryUrl != null ? CategoryService?.Categories?.FirstOrDefault(c => c.Url != null
                                                                    ? c.Url.ToLower().Equals(CategoryUrl.ToLower())
                                                                    : false) 
                                                                    : null;
        if (AuthenticationState != null)
        { 
            var authState = await AuthenticationState;
            var user = authState?.User;

            if (user?.Identity != null && user.Identity.IsAuthenticated)
            {
                _authText = $"С возвращением, {user.Identity.Name}!";
            }
        }       
        
        await StatsService.GetVisitsAsync();
    }
}
